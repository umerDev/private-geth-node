version: '3.8'

services:
  geth-bootnode:
    hostname: geth-bootnode
    env_file:
      - .env
    image: geth-client
    build:
      context: .
      args:
        - ACCOUNT_PASSWORD=${ACCOUNT_PASSWORD}
    command:
      --nodekeyhex="b0ac22adcad37213c7c565810a50f1772291e7b0ce53fb73e7ec2a3c75bc13b5"
      --nodiscover
      --ipcdisable
      --networkid=${NETWORK_ID}
      --netrestrict="172.16.254.0/28"
    networks:
      priv-eth-net:

  geth-rpc-endpoint:
    hostname: geth-rpc-endpoint
    env_file:
      - .env
    image: geth-client
    depends_on:
      - geth-bootnode
    command:
      --bootnodes="enode://af22c29c316ad069cf48a09a4ad5cf04a251b411e45098888d114c6dd7f489a13786620d5953738762afa13711d4ffb3b19aa5de772d8af72f851f7e9c5b164a@geth-bootnode:30303"
      --allow-insecure-unlock
      --http
      --http.addr="0.0.0.0"
      --http.api="eth,web3,net,admin,personal"
      --http.corsdomain="*"
      --graphql
      --graphql.vhosts=*
      --networkid=${NETWORK_ID}
      --netrestrict="172.16.254.0/28"
    ports:
      # HTTP server / GraphQL API
      - 8545:8545
      # WebSocket
      - 8546:8546
      # Network listening port (P2P networking)
      - 30303:30303
    networks:
      priv-eth-net:

  geth-miner:
    hostname: geth-miner
    env_file:
      - .env
    image: geth-client
    depends_on:
      - geth-bootnode
    command:
      --bootnodes="enode://af22c29c316ad069cf48a09a4ad5cf04a251b411e45098888d114c6dd7f489a13786620d5953738762afa13711d4ffb3b19aa5de772d8af72f851f7e9c5b164a@geth-bootnode:30303"
      --mine
      --miner.threads=1
      --networkid=${NETWORK_ID}
      --netrestrict="172.16.254.0/28"
    networks:
      priv-eth-net:

networks:
  priv-eth-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.254.0/28

  # ethereum-geth:
  #   build:
  #     context: .
  #   user: '$USER:$GROUP'
  #   volumes:
  #     - ./eth:/home/umer/.ethereum
  #     # https://github.com/compose-spec/compose-spec/blob/e8db8022c0b2e3d5eb007d629ff684cbe49a17a4/spec.md#short-syntax-4
  #     - '/etc/passwd:/etc/passwd:ro'
  #     - '/etc/group:/etc/group:ro'
  #   ports:
  #     # HTTP server / GraphQL API
  #     - 8545:8545
  #     # WebSocket
  #     - 8546:8546
  #     # Network listening port (P2P networking)
  #     - 30303:30303
  #   command: [
  #       # Blockchain sync mode ("snap", "full")
  #       '--syncmode=full',
  #       # Megabytes of memory allocated to internal caching
  #       '--cache=8192',
  #       # Enable the WS-RPC server
  #       '--ws',
  #       '--ws.addr=0.0.0.0',
  #       # Enable the HTTP-RPC server
  #       '--http',
  #       '--http.addr=0.0.0.0',
  #       '--http.vhosts=*',
  #       # Enable GraphQL on the HTTP-RPC server. Note that GraphQL can only be started if an HTTP server is started as well.
  #       '--graphql',
  #       '--graphql.vhosts=*',
  #       # Enable metrics collection and reporting
  #       '--metrics',
  #       # private chain
  #       '--networkid=21',
  #       # Maximum number of network peers (network disabled if set to 0) (default: 50)
  #       '--maxpeers=30',
  #       # Data directory for the databases and keystore (default: "/root/.ethereum")
  #       '--datadir=/home/umer/.ethereum',
  #     ]
